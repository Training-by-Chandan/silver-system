> #reset 64
Resetting execution engine.
Loading context from 'CSharpInteractive.rsp'.
> List<string> months = new List<string>() { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" };

> months
List<string>(12) { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }

> from m in months where m.StartsWith("J") select m
Enumerable.WhereListIterator<string> { "January", "June", "July" }

> (from m in months where m.StartsWith("J") select m).ToList()
List<string>(3) { "January", "June", "July" }

> (from m in months orderby m select m)
OrderedEnumerable<string, string> { "April", "August", "December", "February", "January", "July", "June", "March", "May", "November", "October", "September" }

> (from m in months orderby m select m).ToList()
List<string>(12) { "April", "August", "December", "February", "January", "July", "June", "March", "May", "November", "October", "September" }

> (from m in months where m.Contains("ber") select m)
Enumerable.WhereListIterator<string> { "September", "October", "November", "December" }

> months
List<string>(12) { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }

> 

> (from m in months select m.Substring(0,3)).ToList()
List<string>(12) { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }

> var abbr = (from m in months select m.Substring(0, 3)).ToList();

> abbr
List<string>(12) { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }

> var len = (from m in months select m.Length).ToList();

> len
List<int>(12) { 7, 8, 5, 5, 3, 4, 4, 6, 9, 7, 8, 8 }

> len.Sort()

> len
List<int>(12) { 3, 4, 4, 5, 5, 6, 7, 7, 8, 8, 8, 9 }

> len.Distinct()
DistinctIterator { 3, 4, 5, 6, 7, 8, 9 }

> 

> var res = (from m in months select new { Name=m, Len=m.Length, Abbr=m.Substring(0,3)}).ToList();

> res
List<<>f__AnonymousType0#17<string, int, string>>(12) { \{ Name = "January", Len = 7, Abbr = "Jan" }, \{ Name = "February", Len = 8, Abbr = "Feb" }, \{ Name = "March", Len = 5, Abbr = "Mar" }, \{ Name = "April", Len = 5, Abbr = "Apr" }, \{ Name = "May", Len = 3, Abbr = "May" }, \{ Name = "June", Len = 4, Abbr = "Jun" }, \{ Name = "July", Len = 4, Abbr = "Jul" }, \{ Name = "August", Len = 6, Abbr = "Aug" }, \{ Name = "September", Len = 9, Abbr = "Sep" }, \{ Name = "October", Len = 7, Abbr = "Oct" }, \{ Name = "November", Len = 8, Abbr = "Nov" }, \{ Name = "December", Len = 8, Abbr = "Dec" } }

> res.Add(new { Name = "abc", Len = 3, Abbr = "abc" });

> res
List<<>f__AnonymousType0#17<string, int, string>>(13) { \{ Name = "January", Len = 7, Abbr = "Jan" }, \{ Name = "February", Len = 8, Abbr = "Feb" }, \{ Name = "March", Len = 5, Abbr = "Mar" }, \{ Name = "April", Len = 5, Abbr = "Apr" }, \{ Name = "May", Len = 3, Abbr = "May" }, \{ Name = "June", Len = 4, Abbr = "Jun" }, \{ Name = "July", Len = 4, Abbr = "Jul" }, \{ Name = "August", Len = 6, Abbr = "Aug" }, \{ Name = "September", Len = 9, Abbr = "Sep" }, \{ Name = "October", Len = 7, Abbr = "Oct" }, \{ Name = "November", Len = 8, Abbr = "Nov" }, \{ Name = "December", Len = 8, Abbr = "Dec" }, \{ Name = "abc", Len = 3, Abbr = "abc" } }

> res.Add(new { Names = "abc", Lens = 3, Abbrs = "abc" });
(1,9): error CS1503: Argument 1: cannot convert from '<anonymous type: string Names, int Lens, string Abbrs>' to '<anonymous type: string Name, int Len, string Abbr>'

> 
> 
> 
> 


> //lambda expressions

> months
List<string>(12) { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }

> months.Where(p=>p.StartsWith("J")).ToList()
List<string>(3) { "January", "June", "July" }

> months.OrderBy(p=>p)
OrderedEnumerable<string, string> { "April", "August", "December", "February", "January", "July", "June", "March", "May", "November", "October", "September" }

> months.Select(any=>any.Substring(0,3)).ToList()
List<string>(12) { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }

> months.Select(m => new { Name = m, Length = m.Length, Abbr = m.Substring(0, 3).ToUpper() });

> months.Select(m => new { Name = m, Length = m.Length, Abbr = m.Substring(0, 3).ToUpper() })
Enumerable.WhereSelectListIterator<string, <>f__AnonymousType0#25<string, int, string>> { \{ Name = "January", Length = 7, Abbr = "JAN" }, \{ Name = "February", Length = 8, Abbr = "FEB" }, \{ Name = "March", Length = 5, Abbr = "MAR" }, \{ Name = "April", Length = 5, Abbr = "APR" }, \{ Name = "May", Length = 3, Abbr = "MAY" }, \{ Name = "June", Length = 4, Abbr = "JUN" }, \{ Name = "July", Length = 4, Abbr = "JUL" }, \{ Name = "August", Length = 6, Abbr = "AUG" }, \{ Name = "September", Length = 9, Abbr = "SEP" }, \{ Name = "October", Length = 7, Abbr = "OCT" }, \{ Name = "November", Length = 8, Abbr = "NOV" }, \{ Name = "December", Length = 8, Abbr = "DEC" } }

> res
List<<>f__AnonymousType0#17<string, int, string>>(13) { \{ Name = "January", Len = 7, Abbr = "Jan" }, \{ Name = "February", Len = 8, Abbr = "Feb" }, \{ Name = "March", Len = 5, Abbr = "Mar" }, \{ Name = "April", Len = 5, Abbr = "Apr" }, \{ Name = "May", Len = 3, Abbr = "May" }, \{ Name = "June", Len = 4, Abbr = "Jun" }, \{ Name = "July", Len = 4, Abbr = "Jul" }, \{ Name = "August", Len = 6, Abbr = "Aug" }, \{ Name = "September", Len = 9, Abbr = "Sep" }, \{ Name = "October", Len = 7, Abbr = "Oct" }, \{ Name = "November", Len = 8, Abbr = "Nov" }, \{ Name = "December", Len = 8, Abbr = "Dec" }, \{ Name = "abc", Len = 3, Abbr = "abc" } }

> res.OrderBy(p=>p.Len)
OrderedEnumerable<<>f__AnonymousType0#17<string, int, string>, int> { \{ Name = "May", Len = 3, Abbr = "May" }, \{ Name = "abc", Len = 3, Abbr = "abc" }, \{ Name = "June", Len = 4, Abbr = "Jun" }, \{ Name = "July", Len = 4, Abbr = "Jul" }, \{ Name = "March", Len = 5, Abbr = "Mar" }, \{ Name = "April", Len = 5, Abbr = "Apr" }, \{ Name = "August", Len = 6, Abbr = "Aug" }, \{ Name = "January", Len = 7, Abbr = "Jan" }, \{ Name = "October", Len = 7, Abbr = "Oct" }, \{ Name = "February", Len = 8, Abbr = "Feb" }, \{ Name = "November", Len = 8, Abbr = "Nov" }, \{ Name = "December", Len = 8, Abbr = "Dec" }, \{ Name = "September", Len = 9, Abbr = "Sep" } }

> res.Select(p=>p.Len.ToString())
Enumerable.WhereSelectListIterator<<>f__AnonymousType0#17<string, int, string>, string> { "7", "8", "5", "5", "3", "4", "4", "6", "9", "7", "8", "8", "3" }

> 